# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                              __                             #
#                          .-----.---.-.-----.|  |                            #
#                          |  _  |  _  |     ||  |                            #
#                          |   __|___._|__|__||__|                            #
#                          |__|     ... .-..                                  #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
#         COLLECTION LAST PAGE SEGMENT ENCODING (LPSE) CONFIGURATION          #
#         ---------- ---- ---- ------- -------- ------ -------------          #
#                                                                             #
# This file configures the collection and field sets that Panl uses to        #
# generate the query that is sent to the Solr search server.                  #
#                                                                             #
# It uses (L)ast (P)ath (S)egment (E)ncoding that:                            #
#                                                                             #
#   1. reads the last segment of the URI path,                                #
#   2. decodes it with the configuration contained herein,                    #
#   3. converts it to a Solr search query,                                    #
#   4. sends the query to the Solr Search engine,                             #
#   5. parses the response adding additional information, and                 #
#   6. sends the response back to the requester                               #
#                                                                             #
# A LPSE encoded URI path will be of the following format:                    #
#                                                                             #
#   /something/something-else/se/                                             #
#                                                                             #
# In the above URI Path, the LPSE part is the /se/ part of the URI            #
#                                                                             #
# The above URI is equivalent to the request parameters below:                #
#                                                                             #
# rather than ?firstfield=something&secondfield=something-else                #
#                                                                             #
# The following characters may be used in the url for the encoding of the     #
# facets and queries.                                                         #
#                                                                             #
#             A B C D E F G H I J K L M N O P Q R S T U V W X Y Z             #
#             a b c d e f g h i j k l m n o p q r s t u v w x y z             #
#             0 1 2 3 4 5 6 7 8 9                                             #
#                                                                             #
# The following are reserved characters and __MUST__ not be used as they are  #
# modifiers that the Panl server users, or are reserved for future use.       #
#                                                                             #
#        + - . ~ [ ] ^ ( )                                                    #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
#   NOTE: The Panl server will not enforce the above two rules.  If either    #
#         the reserved characters, or a character outside of the allowable    #
#         encoding characters, then the Panl server may return erroneous, or  #
#         a 500 internal server error.                                        #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
# The following configuration values determine how the LPSE is configured.    #
# The LPSE is made up of the following types:                                 #
#     - query term parameter - the actual query entered by the user of the    #
#         site                                                                #
#     - facet parameters - used to refine/narrow the search query term        #
#     - SOLR configuration - used to change how the results are displayed     #
#         for example:                                                        #
#           sort order,                                                       #
#           number of results per page,                                       #
#           and page number                                                   #
#     - facet modifiers - used to modify the way in which facets are utilised #
#                                                                             #
# First up, the number of characters that are used for encoding of a          #
# particular parameter must be set.  This number must then also match the     #
# length of the codes assigned to the                                         #
#                                                                             #
#   panl.facet.*                                                              #
#   panl.field.*                                                              #
#                                                                             #
# definitions, else a FATAL encoding error will occur and the server will not #
# be started.  This defaults to a single character if not set - i.e.          #
#                                                                             #
#     panl.lpse.length=1                                                      #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

#                                Panl LPSE Length
#                                ---- ---- ------
# The length (or number of characters) for each of the LPSE codes for the
# facet and normal field.  This length does not apply to the Panl metadata
# LPSE codes which are __ALWAYS__ of length 1 (one)
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.length=1

#                                Panl Metadata
#                                ---- --------
# The following are considered metadata that changes what results are returned
# and in what format.  These are not considered facets, however they
# __DO_NOT__ conform to the panl.lpse.length property above and are __ALWAYS__
# a constant length of 1 (one).  These define the following metadata:
#
#    panl.param.query - The query that is sent through to the Solr server
#    panl.param.sort - The sort order
#    panl.param.page - The page number
#    panl.param.numrows - The number of results per page by default
#    panl.param.query.operand - The Solr query operand (q.op)
#    panl.param.passthrough - Pass through parameters which will not be passed
#         through to the Solr search server (see property below)
#    panl.param.passthrough.canonical - Whether to keep this URI path value in
#         the generated canonical URI (and all URIs generated)  If not included
#         this property defaults to false
#
# NOTE: The LPSE codes assigned to the metadata __MUST_NOT__ be the same as any
#       of the facets, __OR__ start with the same letter as any of the facets
#       if the panl.lpse.length is greater than 1
#
# NOTE: Both the page and numrows parameters may have a prefix and suffix
#       assigned to them, for example:
#
#    panl.param.page.prefix=page-
#    panl.param.page.suffix=
#
#    panl.param.numrows=n
#    panl.param.numrows.prefix=
#    panl.param.numrows.suffix=-per-page
#
#                                ~ ~ ~ * ~ ~ ~


panl.param.query=q
panl.param.sort=s

panl.param.page=p
panl.param.page.prefix=page-
panl.param.page.suffix=

panl.param.numrows=n
panl.param.numrows.prefix=
panl.param.numrows.suffix=-per-page

panl.param.query.operand=o

panl.param.passthrough=z
panl.param.passthrough.canonical=false

#                         The Form Query To Respond To
#                         --- ---- ----- -- ------- --
# In the below HTML form definition, the 'q' named parameter is passed through
# to the Panl server, which is then parsed and send through to the Solr search
# sever as the Solr Query 'q' parameter.
#
# <form method="GET">
#   <label><input type="text" name="q" /></label>
#   <button type="submit">Search</button>
# </form>
#
# You may wish to set this to something else - e.g. search, or find.
#
# If this property is not included, then the default value for this is 'q'
# (without the quotes)
#
#                                ~ ~ ~ * ~ ~ ~

panl.form.query.respondto=search


#                     Whether to include single facets
#                     ------- -- ------- ------ ------
# Facets that only include a single result to further refine the query will not
# be included by default.  The reasoning behind this is that having a list of
# facets with only one result will not refine the query at all, it will simply
# return the same set of results, just with a longer LPSE URI.  You may wish to
# include these results for a more verbose URL and possibly better search
# engine visibility
#
# The default value for this property is false, so you do not need to include
# it unless you wish to enable this feature, i.e.
#
#     panl.include.single.facets=true
#
#                                ~ ~ ~ * ~ ~ ~

panl.include.single.facets=false

#                    Whether to include same number facets
#                    ------- -- ------- ---- ------ ------
# Facets that include the same number of results as the number of found
# documents will not be included by default.  The reasoning behind this is that
# if, by using this facet, you will get exactly the same results, then this is
# not a refinement of the query at all, it will simply return the same set of
# results, just with a longer LPSE URI.
#
# The default value for this property is false, so you do not need to include
# it unless you wish to enable this feature, i.e.
#
#     panl.include.same.number.facets=true
#
#                                ~ ~ ~ * ~ ~ ~

panl.include.same.number.facets=false

#                         The Default Query Operand
#                         --- ------- ----- -------
# This maps to the Solr q.op parameter, by default it is OR (the '-') character
# - i.e. the search query will need to be in one of the search fields.
#
# This value can also be changed per request with the LPSE encoded parameter
# see the property:
#
#    panl.param.query.operand
#
# This __MUST__ be either a +, or a -
#
# For q.op=OR, use -
# For q.op=AND, use +
#
#                                ~ ~ ~ * ~ ~ ~

solr.default.query.operand=-

#           The Default Maximum Number Of Facet Values To Return
#           --- ------- ------- ------ -- ----- ------ -- ------
# This is not a required property, the default set by Solr is 100, you may
# change this to any positive integer value (see note below).  This works on a
# per-facet basis so the maximum number of facet values that are returned for
# each facet will at most be the value set below.
#
# If you set this to -1, then ALL facets will be returned.
#
#                                ~ ~ ~ * ~ ~ ~

solr.facet.limit=100

#                        The Minimum Facet Value Count
#                        --- ------- ----- ----- -----
# If the query would return a facet with a count value less than this amount,
# then it will not be returned.
#
#                                ~ ~ ~ * ~ ~ ~

solr.facet.min.count=1

#              The Default Number of Rows (Documents) To Return
#              --- ------- ------ -- ---- ----------- -- ------
# The Solr default is 10 documents to be returned, however, this may be set to
# any positive integer value.  There are two number of results that can be
# returned, one for the faceted document results, and the other for the
# lookahead number of results.
#
# For the faceted document results (solr.numrows.default), this value can also
# be changed by the end user with the LPSE encoded parameter see the property
# for the LPSE code that this is bound to:
#
#    panl.param.numrows
#
# For the lookahead document results (solr.numrows.lookahead) this is the
# number of results to be returned by the lookahead handler.  It CANNOT be
# changed through a LPSE URL parameter.
#
# The maximum number of results that will ever be allowed to be returned by the
# Panl server (solr.numrows.maximum).  If a LPSE code is passed through which
# is greater than this, then it will be set to this.  This stops arbitrary LPSE
# code values to retrieve all documents.  It CANNOT be changed through a LPSE
# URL parameter.
#
#                                ~ ~ ~ * ~ ~ ~

solr.numrows.default=10
solr.numrows.lookahead=5
solr.numrows.maximum=10

#          Whether to return search results with highlight markup
#          ------- -- ------ ------ ------- ---- --------- ------
# This controls whether Solr will surround found search query text with markup,
# with the markup being defined in the solrconfig.xml file (see line ~1060 in
# the included sample configuration files).
#
# The default for this is false, i.e.
#
#   solr.highlight=false
#                                ~ ~ ~ * ~ ~ ~

solr.highlight=false

#                             Panl Facet Configuration
#                             ---- ----- -------------
# The panl facets that are in use by this collection.  The format is:
#     panl.facet.<code>=<solr_field>
#     panl.name.<code>=<field_name>
#
# where:
#       <code> is the LPSE code and __MUST__ be the same length as the
#              panl.lpse.length
# <solr_field> is the solr field name which __MUST__ map to the Solr field
#              name in the solr schema.xml configuration file
# <field_name> is the name of the facet in a more human friendly version, will
#              be returned with the results, and may be used as the facet
#              header
#
#                                ~ ~ ~ * ~ ~ ~
# IMPORTANT: There are a plethora of properties that may be set, depending on
#            the defined Solr field type and the behaviour of the field that
#            You would like the Panl server to exhibit.  There are different
#            types of facets, some of which have specific configuration
#            properties that can be set.
#
#             - Regular facet
#             - BOOLEAN facet
#             - OR facet
#             - RANGE facet
#             - DATE facet
#
#            Where possible, all properties that are available for a specific
#            field will be included, but commented out.  This does increase the
#            number of lines in the file, however it makes a good reference
#            point.
#
#            For additional information on any of the above facets and
#            properties, please see the documentation.
#
#                                ~ ~ ~ * ~ ~ ~
#
# Additionally (and optionally), you may define a prefix and/or a suffix for
# any defined facet.  This will make the URL longer, but will also make it more
# human understandable. Panl will automatically remove these before sending the
# query to the Solr server
#
# The format is:
#     panl.prefix.<code>=<prefix>
#     panl.suffix.<code>=<suffix>
#
# where:
#       <code> is the LPSE code and __MUST__ be the same length as the
#              panl.lpse.length
#     <prefix> is the text that will be prefixed before the selected facet in
#              the URI
#     <suffix> is the text that will be suffixed after the selected facet in
#              the URI
#
# As an example, should you have a manufacturer facet (LPSE code 'm') value of
# 'ACME Incorporated' with the following properties set:
#
#     panl.prefix.m=Manufactured by
#     panl.suffix.m=\ // a fine company
#
# The non-suffixed, non-prefixed URI encoding would be:
#     /ACME Incorporated/m/
#
# Post processing (i.e. URL decoding), the URI would be the following:
#     /Manufactured by ACME Incorporated // a fine company/m/
#
#                                ~ ~ ~ * ~ ~ ~
#
# For RANGE facets the following properties are available, these options work
# best with Integer or Floating point types for Solr Fields.  It is available
# for String Solr dataTypes, although if there is is anything more than just a
# single character then the front-end implementation becomes more difficult.
#
#     panl.range.facet.<lpse_code>=<true_or_false>
#     panl.range.min.<lpse_code>=<minimum_value>
#     panl.range.max.<lpse_code>=<maximum_value>
#     panl.range.prefix.<lpse_code>=<range_prefix>
#     panl.range.infix.<lpse_code>=<range_infix>
#     panl.range.suffix.<lpse_code>=<range_suffix>
#     panl.range.min.value.<lpse_code>=<min_value_replacement>
#     panl.range.max.value.<lpse_code>=<max_value_replacement>
#     panl.range.min.wildcard.<lpse_code>=<true_or_false>
#     panl.range.max.wildcard.<lpse_code>=<true_or_false>
#
# Notes:
#     panl.range.facet.<lpse_code>
#         This __MUST__ be set to true for this facet to be a RANGE facet
#     panl.range.min.<lpse_code>
#         This __MUST__ be set and be the minimum value for the dataset
#     panl.range.max.<lpse_code>
#         This __MUST__ be set and be the maximum value for the dataset
#     panl.range.prefix.<lpse_code>
#         This is the prefix that is applied to the range
#     panl.range.infix.<lpse_code>
#         This is the infix that sits between the values, if not set it will
#         default to the tilde character '~'
#     panl.range.suffix.<lpse_code>
#         This is the suffix that is applied to the range
#     panl.range.min.value.<lpse_code>
#         (Optional) This is the text that is replaced if the range value
#         selected is equal to the panl.range.min.<lpse_code> property value
#     panl.range.max.value.<lpse_code>=<max_value_replacement>
#         (Optional) This is the text that is replaced if the range value
#         selected is equal to the panl.range.max.<lpse_code> property value
#     panl.range.min.wildcard.<lpse_code>
#         (Optional) If the minimum value acts as a wildcard (and therefore
#         will also include values which are less than this value)
#     panl.range.max.wildcard.<lpse_code>
#         (Optional) If the maximum value acts as a wildcard (and therefore
#         will also include values which are greater than this value)
#     panl.range.suppress.<lpse_code>
#         (Optional) By default, panl will return a range JSON object and the
#         individual values for a facet. Setting this to true will only return
#         the range JSON object.
#
#                                ~ ~ ~ * ~ ~ ~
#
# NOTE: If this file was generated by the Panl generator, then a comment is
#       included before each of the lpse fields with the XML definition from
#       the Solr schema file.
#
# NOTE: ONLY fields that are INDEXED and STORED are included in the lpse fields
#       as they are the only ones that will have faceting enabled on them.
#
# NOTE: You do not need to define to facet on all the fields - any definitions
#       of fields that you do not wish to facet on may be simply deleted (it
#       is recommended to comment out the fields so that they may be easily
#       added back into the file if required).
#
#                                ~ ~ ~ * ~ ~ ~
#
# You may return additional fields with a query that are either faceted or not
# and are defined in the
#
#     panl.results.fields.*
#
# properties towards the bottom of this file
#
#                                ~ ~ ~ * ~ ~ ~

# <field "indexed"="true" "stored"="true" "name"="id" "type"="string" "multiValued"="false" "required"="true" />
panl.field.i=id
panl.name.i=Id
panl.type.i=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="brand" "type"="string" "multiValued"="false" />
panl.facet.b=brand
panl.or.facet.b=false
panl.range.facet.b=false
panl.name.b=Brand
panl.type.b=solr.StrField
panl.prefix.b=Manufactured by 
panl.suffix.b=\ Company

# <field "indexed"="true" "stored"="true" "name"="name" "type"="string" "multiValued"="false" />
panl.facet.N=name
panl.name.N=Pencil Model
panl.type.N=solr.StrField
panl.when.N=b

# <field "indexed"="true" "stored"="true" "name"="mechanism_type" "type"="string" "multiValued"="false" />
panl.facet.m=mechanism_type
panl.name.m=Mechanism Type
panl.type.m=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="body_shape" "type"="string" "multiValued"="false" />
panl.field.B=body_shape
panl.name.B=Body Shape
panl.type.B=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="grip_type" "type"="string" "multiValued"="false" />
panl.field.g=grip_type
panl.name.g=Grip Type
panl.type.g=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="grip_shape" "type"="string" "multiValued"="false" />
panl.facet.G=grip_shape
panl.name.G=Grip Shape
panl.type.G=solr.StrField
panl.suffix.G=\ Grip

# <field "indexed"="true" "stored"="true" "name"="cap_shape" "type"="string" "multiValued"="false" />
panl.field.c=cap_shape
panl.name.c=Cap Shape
panl.type.c=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="category" "type"="string" "multiValued"="false" />
panl.facet.C=category
panl.name.C=Category
panl.type.C=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="length" "type"="pint" "multiValued"="false" />
panl.field.l=length
panl.name.l=Length
panl.type.l=solr.IntPointField

# <field "indexed"="true" "stored"="true" "name"="relative_length" "type"="pint" "multiValued"="false" />
panl.field.r=relative_length
panl.name.r=Relative Length
panl.type.r=solr.IntPointField

# <field "indexed"="true" "stored"="true" "name"="diameter" "type"="pint" "multiValued"="false" />
panl.field.d=diameter
panl.name.d=Diameter
panl.type.d=solr.IntPointField

# <field "indexed"="true" "stored"="true" "name"="weight" "type"="pint" "multiValued"="false" />
panl.facet.w=weight
panl.name.w=Weight
panl.type.w=solr.IntPointField
panl.suffix.w=\ grams
panl.range.facet.w=true
panl.range.min.w=10
panl.range.max.w=50
panl.range.prefix.w=weighing from 
panl.range.infix.w=\ to 
panl.range.suffix.w=\ grams
panl.range.min.value.w=from light
panl.range.max.value.w=heavy pencils
panl.range.min.wildcard.w=true
panl.range.max.wildcard.w=true
panl.range.suppress.w=false


# <field "indexed"="true" "stored"="true" "name"="relative_weight" "type"="pint" "multiValued"="false" />
panl.field.R=relative_weight
panl.name.R=Relative Weight
panl.type.R=solr.IntPointField

# <field "indexed"="true" "stored"="true" "name"="lead_length" "type"="pint" "multiValued"="false" />
panl.facet.L=lead_length
panl.name.L=Maximum Allowed Lead Length
panl.type.L=solr.IntPointField
panl.suffix.L=mm

# <field "indexed"="true" "stored"="true" "name"="disassemble" "type"="boolean" "multiValued"="false" />
panl.facet.D=disassemble
panl.name.D=Disassemble
panl.type.D=solr.BoolField
# Because this is a Boolean field, you can change these values to something more human-readable
panl.bool.D.true=able to be
panl.bool.D.false=cannot be
panl.suffix.D=\ disassembled

# <field "indexed"="true" "stored"="true" "name"="mechanism_material" "type"="string" "multiValued"="false" />
panl.field.M=mechanism_material
panl.name.M=Mechanism Material
panl.type.M=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="tubing_material" "type"="string" "multiValued"="false" />
panl.field.t=tubing_material
panl.name.t=Tubing Material
panl.type.t=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="hardness_indicator" "type"="string" "multiValued"="false" />
panl.facet.h=hardness_indicator
panl.name.h=Hardness Indicator
panl.type.h=solr.StrField

# <field "indexed"="true" "stored"="false" "name"="in_built_eraser" "type"="boolean" "multiValued"="false" />
panl.facet.I=in_built_eraser
panl.name.I=In Built Eraser
panl.type.I=solr.BoolField
# Because this is a Boolean field, you can change these values to something more human-readable
#panl.bool.I.true=true
#panl.bool.I.false=false

# <field "indexed"="true" "stored"="true" "name"="variants" "type"="string" "multiValued"="true" />
panl.field.v=variants
panl.name.v=Variants
panl.multivalue.v=true
panl.type.v=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="nib_shape" "type"="string" "multiValued"="false" />
panl.field.e=nib_shape
panl.name.e=Nib Shape
panl.type.e=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="nib_material" "type"="string" "multiValued"="false" />
panl.field.x=nib_material
panl.name.x=Nib Material
panl.type.x=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="grip_material" "type"="string" "multiValued"="false" />
panl.field.X=grip_material
panl.name.X=Grip Material
panl.type.X=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="body_material" "type"="string" "multiValued"="false" />
panl.field.K=body_material
panl.name.K=Body Material
panl.type.K=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="clip_material" "type"="string" "multiValued"="false" />
panl.field.A=clip_material
panl.name.A=Clip Material
panl.type.A=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="cap_material" "type"="string" "multiValued"="false" />
panl.field.f=cap_material
panl.name.f=Cap Material
panl.type.f=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="lead_size_indicator" "type"="string" "multiValued"="false" />
panl.facet.Z=lead_size_indicator
panl.name.Z=Lead Size Indicator
panl.type.Z=solr.StrField

# <field "indexed"="true" "stored"="false" "name"="in_built_sharpener" "type"="boolean" "multiValued"="false" />
panl.facet.9=in_built_sharpener
panl.name.9=In Built Sharpener
panl.type.9=solr.BoolField
# Because this is a Boolean field, you can change these values to something more human-readable
panl.bool.9.true=Has in-built sharpener
panl.bool.9.false=No in-built sharpener

# <field "indexed"="true" "stored"="true" "name"="colours" "type"="string" "multiValued"="true" />
panl.facet.W=colours
panl.name.W=Colours
panl.prefix.W=Colours:
panl.multivalue.W=true
panl.type.W=solr.StrField
panl.multivalue.separator.W=,


#                        Panl LPSE Order Configuration
#                        ---- ---- ----- -------------
# This is the order in which the URL will be generated, the default order
# generated by panl generate is the order in which the fields were defined in
# the solr managed-schema.xml file and will almost certainly not be the order
# in which you would want to generate the URLs.
#
# NOTE: all defined panl facet fields must be represented here, and the
# recommendation is to have the properties in the following order:
#
#     panl.param.passthrough
#
#   ... all the other LPSE codes ...
#
#     panl.param.query
#     panl.param.page
#     panl.param.numrows
#     panl.param.sort
#     panl.param.query.operand
#
# Of course, you are welcome to change this.
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.order=z,b,N,m,W,G,C,L,D,h,I,Z,9,w,s,p,n,o,q

#                        Panl LPSE Ignore Configuration
#                        ---- ---- ------ -------------
# Any LPSE code listed below will be ignored and not returned in either the
# active or available filters JSON object
#
# This is useful when you want to use a facet for a lookup, but not allow the
# facet to be removed or returned in the list of available or active facets. An
# example usage would be when generating a link to a single results (say with
# its id field) and the returned available facets would return all of the ids
# as facets.
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.ignore=

#                       Panl Results Field Configuration
#                       ---- ------- ----- -------------
# Below are the fields that are configured to be returned for the query, these
# fields are added to the query and must match the solr fields.
#
# By default, the panl.results.fields.default always exists - even if it is not
# included in these properties file - it is included here for reference for all
# the fields that are stored by the solr engine.  If the default fieldset is
# not explicitly defined, then it will request that __ALL__ fields be sent back
# from the Solr server.  If you edit the default fieldset, then only those
# fields referenced will be sent back.
#
# Additionally, there is a hidden fieldset panl.results.fields.empty which will
# __ALWAYS__ exist and __ALWAYS__ return no fields in the document.  (This is
# done by requesting no documents be returned with the results, irrespective of
# the passed in parameters and default rows parameter.)  If you define a
# fieldset as empty, then it will log an error on startup and be silently
# ignored
#
# To define a fieldset, as an example, another property:
#
#     panl.results.fields.firstfive
#
# was also automatically generated with only the first five fields.  You may
# rename, delete or add any of the results fields properties as you wish.
#
#                                ~ ~ ~ * ~ ~ ~


panl.results.fields.default=id,\
  brand,\
  name,\
  mechanism_type,\
  nib_shape,\
  body_shape,\
  grip_type,\
  grip_shape,\
  cap_shape,\
  category,\
  length,\
  relative_length,\
  diameter,\
  weight,\
  relative_weight,\
  lead_length,\
  disassemble,\
  nib_material,\
  mechanism_material,\
  grip_material,\
  body_material,\
  tubing_material,\
  clip_material,\
  cap_material,\
  hardness_indicator,\
  lead_size_indicator,\
  colours,\
  variants,\
  description

panl.results.fields.firstfive=brand,\
  name,\
  category,\
  mechanism_type,\
  weight

panl.results.fields.brandandname=brand,\
  name

#                      Panl Sort Field Configuration
#                      ---- ---- ----- -------------
# Below are the fields that are configured to be able to be sorted on, these
# fields must either be defined as a panl.facet or a panl.field and __MUST__ be
# the Solr field name.
#
#                                ~ ~ ~ * ~ ~ ~

panl.sort.fields=brand,name