# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                               __                            #
#                           .-----.---.-.-----.|  |                           #
#                           |  _  |  _  |     ||  |                           #
#                           |   __|___._|__|__||__|                           #
#                           |__|     ... .-..                                 #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
#         COLLECTION LAST PAGE SEGMENT ENCODING (LPSE) CONFIGURATION          #
#         ---------- ---- ---- ------- -------- ------ -------------          #
#                                                                             #
# This file configures the collection and field sets that Panl uses to        #
# generate the query that is sent to the Solr search server.                  #
#                                                                             #
# It uses (L)ast (P)ath (S)egment (E)ncoding that:                            #
#                                                                             #
#   1. reads the last segment of the URI path,                                #
#   2. decodes it with the configuration contained herein,                    #
#   3. converts it to a Solr search query,                                    #
#   4. sends the query to the Solr Search engine,                             #
#   5. parses the response adding additional information, and                 #
#   6. sends the response back to the requester                               #
#                                                                             #
# A LPSE encoded URI path will be of the following format:                    #
#                                                                             #
#   /something/something-else/se/                                             #
#                                                                             #
# In the above URI Path, the LPSE part is the /se/ part of the URI            #
#                                                                             #
# The above URI is equivalent to the request parameters below:                #
#                                                                             #
# rather than ?firstfield=something&secondfield=something-else                #
#                                                                             #
# The following characters may be used in the url for the encoding of the     #
# facets and queries.                                                         #
#                                                                             #
#             A B C D E F G H I J K L M N O P Q R S T U V W X Y Z             #
#             a b c d e f g h i j k l m n o p q r s t u v w x y z             #
#             0 1 2 3 4 5 6 7 8 9                                             #
#                                                                             #
# The following are reserved characters and __MUST__ not be used as they are  #
# modifiers that the Panl server users, or are reserved for future use.       #
#                                                                             #
#        + - . ~ [ ] ^ ( )                                                    #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
#   NOTE: The Panl server will not enforce the above two rules.  If either    #
#         the reserved characters, or a character outside of the allowable    #
#         encoding characters, then the Panl server may return erroneous, or  #
#         a 500 internal server error.                                        #
#                                                                             #
#                                ~ ~ ~ * ~ ~ ~                                #
#                                                                             #
# The following configuration values determine how the LPSE is configured.    #
# The LPSE is made up of the following types:                                 #
#     - query term parameter - the actual query entered by the user of the    #
#         site                                                                #
#     - facet parameters - used to refine/narrow the search query term        #
#     - SOLR configuration - used to change how the results are displayed     #
#         for example:                                                        #
#           sort order,                                                       #
#           number of results per page,                                       #
#           and page number                                                   #
#     - facet modifiers - used to modify the way in which facets are utilised #
#                                                                             #
# First up, the number of characters that are used for encoding of a          #
# particular parameter must be set.  This number must then also match the     #
# length of the codes assigned to the                                         #
#                                                                             #
#   panl.facet.*                                                              #
#   panl.field.*                                                              #
#                                                                             #
# definitions, else a FATAL encoding error will occur and the server will not #
# be started.  This defaults to a single character if not set - i.e.          #
#                                                                             #
#     panl.lpse.length=1                                                      #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


#                              Panl LPSE Length
#                              ---- ---- ------
# The length (or number of characters) for each of the LPSE codes for the
# facet and normal field.  This length does not apply to the Panl metadata
# LPSE codes which are __ALWAYS__ of length 1 (one)
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.length=1

#                                Panl Metadata
#                                ---- --------
# The following are considered metadata that changes what results are returned
# and in what format.  These are not considered facets, however they
# __DO_NOT__ conform to the panl.lpse.length property above and are __ALWAYS__
# a constant length of 1 (one).  These define the following metadata:
#
#    panl.param.query - The query that is sent through to the Solr server
#    panl.param.sort - The sort order
#    panl.param.page - The page number
#    panl.param.numrows - The number of results per page by default
#    panl.param.query.operand - The Solr query operand (q.op)
#    panl.param.passthrough - Pass through parameters which will not be passed
#         through to the Solr search server (see property below)
#    panl.param.passthrough.canonical - Whether to keep this URI path value in
#         the generated canonical URI (and all URIs generated)  If not included
#         this property defaults to false
#
# NOTE: The LPSE codes assigned to the metadata __MUST_NOT__ be the same as any
#       of the facets, __OR__ start with the same letter as any of the facets
#       if the panl.lpse.length is greater than 1
#
# NOTE: Both the page and numrows parameters may have a prefix and suffix
#       assigned to them, for example:
#
#    panl.param.page.prefix=page-
#    panl.param.page.suffix=
#
#    panl.param.numrows=n
#    panl.param.numrows.prefix=
#    panl.param.numrows.suffix=-per-page
#
#                                ~ ~ ~ * ~ ~ ~

panl.param.query=q
panl.param.sort=s
panl.param.page=p
panl.param.numrows=n
panl.param.query.operand=o
panl.param.passthrough=z
panl.param.passthrough.canonical=false

#                  The Form Query URL Parameters To Respond To
#                  --- ---- ----- --- ---------- -- ------- --
# In the below HTML form definition, the 'search' named parameter is passed
# through to the Panl server, which is then parsed and send through to the Solr
# search sever as the Solr Query 'q' parameter.
#
# The radio buttons use the 'op' named parameter and is passed through to the
# Solr server as the 'q.op' query parameter.
#
# <form method="GET">
#   <label><input type="text" name="search" /></label>
#   <p>Search for:</p>
#   <input type="radio" id="op_AND" name="op" value="+">
#   <label for="op_AND">All the words</label>
#   <input type="radio" id="op_OR" name="op" value="-">
#   <label for="op_OR">Any of the words</label>
#   <button type="submit">Search</button>
# </form>
#
# You may wish to set this to something else - e.g. search, or find, and the
# operator as something else.
#
# If this property is not included, then the default value for this is 'q'
# (without the quotes)
#
#                                ~ ~ ~ * ~ ~ ~

panl.form.query.respondto=search
panl.form.query.operand.respondto=op


#                      Whether To Include Single Facets
#                      ------- -- ------- ------ ------
# Facets that only include a single result to further refine the query will not
# be included by default.  The reasoning behind this is that having a list of
# facets with only one result will not refine the query at all, it will simply
# return the same set of results, just with a longer LPSE URI.  You may wish to
# include these results for a more verbose URL and possibly better search
# engine visibility
#
# The default value for this property is false, so you do not need to include
# it unless you wish to enable this feature, i.e.
#
#     panl.include.single.facets=true
#
#                                ~ ~ ~ * ~ ~ ~

panl.include.single.facets=false

#                    Whether To Include Same Number Facets
#                    ------- -- ------- ---- ------ ------
# Facets that include the same number of results as the number of found
# documents will not be included by default.  The reasoning behind this is that
# if, by using this facet, you will get exactly the same results, then this is
# not a refinement of the query at all, it will simply return the same set of
# results, just with a longer LPSE URI.
#
# The default value for this property is false, so you do not need to include
# it unless you wish to enable this feature, i.e.
#
#     panl.include.same.number.facets=true
#
#                                ~ ~ ~ * ~ ~ ~

panl.include.same.number.facets=false

#                Add 'extra' Information To Every Response
#                --- ------- ----------- -- ----- --------
# This property __MUST__ be a valid JSON object and will be added to every
# response from the Panl server for this collection.  It will be added to the
# JSON response object under the panl.extra JSON key.
#
#                             ~ ~ ~ IMPORTANT ~ ~ ~
#
#   - If this is not a valid JSON object, then the server will error and fail
#     to start.
#   - Any values in this JSON object will overwrite keys in the panl.properties
#     file with the property of panl.server.extra (if it is set)
#   - You may remove this property or leave it blank and it will have no effect
#     and will not be included in the Panl JSON Response
#
#                                ~ ~ ~ * ~ ~ ~

panl.collection.extra=

#                      'More Like This' (MLT) Functionality
#                      ----- ---- ----- ----- -------------
# There are two ways to do an MLT query:
#
#   1. MoreLikeThis Query Parser
#      This uses the existing /select query handler, which is already
#      configured in the solrconfig.xml file, or
#   2. MoreLikeThis Request Handler
#      This will require a solr.MoreLikeThisHandler - to be registered in the
#      solrconfig.xml file.
#
#                            MoreLikeThis Query Parser
#                            ============ ===== ======
#    Use this query parser if your Solr server is set up in cloud mode __AND__
#    there are more than one replica (the number of shards do not matter).
#
#    Set the properties:
#        panl.mlt.enable=true
#        panl.mlt.handler=/select
#        panl.mlt.type=select
#
#                          MoreLikeThis Request Handler
#                          ============ ======= =======
#    Use this query parser if your Solr server is not setup in cloud mode, and
#    you wish to have a separate handler for the MLT.  Note that this handler
#    is not cloud aware will only return nodes from the first replica.  Due to
#    this Panl will attempt to retry the query against other nodes if no valid
#    response was received.  This may still fail...
#
#    Set the properties:
#        panl.mlt.enable=true
#        panl.mlt.handler=/mlt
#        panl.mlt.type=mlt
#        panl.mlt.numretries=6
#
#   You will also need to add configuration to the solrconfig.xml file for this
#   to work:
#
#     <requestHandler name="/mlt" class="solr.MoreLikeThisHandler">
#       <str name="mlt.fl">body</str>
#     </requestHandler>
#
#                            ~ ~ ~ IMPORTANT ~ ~ ~
#
#          If in doubt use the MoreLikeThis Query Parser (i.e. /select)
#
#                                ~ ~ ~ * ~ ~ ~
#
# By default this functionality is DISABLED with the panl.mlt.enable property
# set to false if missing or not set to exactly "true".
#
# The properties are as follows:
#
#    panl.mlt.enable - Whether the MLT functionality is enabled in Panl for
#        this CaFUP (type: Boolean, default: false)
#    panl.mlt.handler - The handler path for the Solr MLT request handler
#        (type: String, default: /select)
#    panl.mlt.type - The type of the handler the Solr MLT request handler, must
#        be one of 'select' or 'mlt' (without the quotes)
#        (type: String, default: select)
#    panl.mlt.fl - The fields to reference for the MLT lookup (type: comma
#        separated Strings, default: N/A)
#
#                            ~ ~ ~ IMPORTANT ~ ~ ~
#
#   - If you have not enabled the MLT functionality in Solr, then this will
#     not work in the Panl server
#   - The panl.mlt.handler property MUST match the configured handler in the
#     Solr configuration
#   - The fields listed in the panl.mlt.fl MUST exist in the Solr collection
#
#                                ~ ~ ~ * ~ ~ ~

panl.mlt.enable=false
panl.mlt.handler=/select
panl.mlt.type=select
# the following property is only used if the panl.mlt.type property above is
# set to 'mlt'
panl.mlt.numretries=6

#                           'More Like This' (MLT) Overrides
#                           ----- ---- ----- ----- ---------
# The following properties will override any default properties that are
# defined in the solrconfig.xml file - i.e. you do not need to set any of these
# properties if they are already defined in this file.
#
# The properties match the More Like This properties for the Solr server:
#
#    panl.mlt.fl=<String> (comma separated) - Specifies the fields to use for
#        similarity. A list of fields can be provided separated by commas. If
#        possible, the fields should have stored termVectors.
#    panl.mlt.mintf=<Integer> (default: 2) - Specifies the minimum frequency
#        below which terms will be ignored in the source document.
#    panl.mlt.mindf=<Integer> (default: 5) - Specifies the minimum frequency
#        below which terms will be ignored which do not occur in at least this
#        many documents.
#    panl.mlt.maxdf=<Integer> (default: none) - Specifies the maximum frequency
#        above which terms will be ignored which occur in more than this many
#        documents.
#    panl.mlt.maxdfpct=<Integer> (default: none - between 0 and 100) -Specifies
#        the maximum document frequency using a ratio relative to the number of
#        documents in the index. The value provided must be an integer between
#        0 and 100. For example, mlt.maxdfpct=75 means the word will be ignored
#        if it occurs in more than 75 percent of the documents in the index.
#    panl.mlt.minwl=<Integer> (default: none) - Sets the minimum word length
#        below which words will be ignored.
#    panl.mlt.maxwl=<Integer> (default: none) - Sets the maximum word length
#        above which words will be ignored.
#    panl.mlt.maxqt=<Integer> (default: 25) - Sets the maximum number of query
#        terms that will be included in any generated query.
#    panl.mlt.maxntp=<Integer> (Default: 5000) - Sets the maximum number of
#        tokens to parse in each example document field that is not stored with
#        TermVector support.
#    panl.mlt.boost=<Boolean> (default: false) - Specifies if the query will be
#        boosted by the interesting term relevance. Possible values are true or
#        false.
#    panl.mlt.qf=<String> (default: none) - Query fields and their boosts using
#        the same format used by the DisMax Query Parser. These fields must
#        also be specified in mlt.fl.
#    panl.mlt.interestingTerms=<String> - Adds a section in the response that
#        shows the top terms (based on TF/IDF) used for the MoreLikeThis query.
#        __MUST__ BE one of 'list', 'none', or 'details' (case sensitive and
#        without the single quotes).  The default is 'none' if missing or not
#        configured.
#    panl.mlt.match.include=<Boolean> (default: true) - Specifies if the
#        response should include the matched document. If set to false, the
#        response will look like a normal select response.
#    panl.mlt.match.offset=<Integer> (default: none) - Specifies an offset into
#        the main query search results to locate the document on which the
#        MoreLikeThis query should operate. By default, the query operates on
#        the first result for the q parameter.
#
# See https://solr.apache.org/guide/solr/latest/query-guide/morelikethis.html
# (or the correct version for your Solr installation)
#
#                             ~ ~ ~ IMPORTANT ~ ~ ~
#
#          THERE MAY BE DIFFERENCES WITH THE PARAMETERS THAT CAN BE SET
#                DEPENDING ON THE SOLR VERSION THAT YOU ARE USING
#
#   - If the following property is not set in the default solrconfig.xml file
#     and is not overridden here, then the MLT will __NOT__ work:
#      - panl.mlt.fl
#     Which is the comma separated list of Solr fields to perform the more like
#     this query
#                                ~ ~ ~ * ~ ~ ~
panl.mlt.fl=
panl.mlt.mintf=0
panl.mlt.mindf=0
panl.mlt.maxdf=
panl.mlt.maxdfpct=
panl.mlt.minwl=0
panl.mlt.maxwl=
panl.mlt.maxqt=
panl.mlt.maxntp=
panl.mlt.boost=
panl.mlt.qf=
panl.mlt.interestingTerms=none
panl.mlt.match.include=false
panl.mlt.match.offset=


#                          The Default Query Operand
#                          --- ------- ----- -------
# This maps to the Solr q.op parameter, by default it is OR (the '-') character
# - i.e. the search query will need to be in one of the search fields.
#
# This value can also be changed per request with the LPSE encoded parameter
# see the property:
#
#    panl.param.query.operand
#
# This __MUST__ be either a +, or a -
#
# For q.op=OR, use -
# For q.op=AND, use +
#
#                                ~ ~ ~ * ~ ~ ~

solr.default.query.operand=-

#            The Default Maximum Number Of Facet Values To Return
#            --- ------- ------- ------ -- ----- ------ -- ------
# This is not a required property, the default set by Solr is 100, you may
# change this to any positive integer value (see note below).  This works on a
# per-facet basis so the maximum number of facet values that are returned for
# each facet will at most be the value set below.
#
# If you set this to -1, then ALL facets will be returned.
#
#                                ~ ~ ~ * ~ ~ ~

solr.facet.limit=100

#                        The Minimum Facet Value Count
#                        --- ------- ----- ----- -----
# If the query would return a facet with a count value less than this amount,
# then it will not be returned.
#
#                                ~ ~ ~ * ~ ~ ~

solr.facet.min.count=1

#              The Default Number of Rows (Documents) To Return
#              --- ------- ------ -- ---- ----------- -- ------
# The Solr default is 10 documents to be returned, however, this may be set to
# any positive integer value.  There are two number of results that can be
# returned, one for the faceted document results, and the other for the
# lookahead number of results.
#
# For the faceted document results (solr.numrows.default), this value can also
# be changed by the end user with the LPSE encoded parameter see the property
# for the LPSE code that this is bound to:
#
#    panl.param.numrows
#
# For the lookahead document results (solr.numrows.lookahead) this is the
# number of results to be returned by the lookahead handler.  It CANNOT be
# changed through a LPSE URL parameter.
#
# For the 'More Like This' document results (solr.numrows.morelikethis) this is
# the number of results to be returned by the MoreLikeThis handler.  It CANNOT
# be changed through a LPSE URL parameter.
#
# The maximum number of results that will ever be allowed to be returned by the
# Panl server (solr.numrows.maximum).  If a LPSE code is passed through which
# is greater than this, then it will be set to this.  This stops arbitrary LPSE
# code values to retrieve all documents.  It CANNOT be changed through a LPSE
# URL parameter.
#
#                                ~ ~ ~ * ~ ~ ~

solr.numrows.default=10
solr.numrows.lookahead=5
solr.numrows.maximum=10
solr.numrows.morelikethis=5

#           Whether To Return Search Results With Highlight Markup
#           ------- -- ------ ------ ------- ---- --------- ------
# This controls whether Solr will surround found search query text with markup,
# with the markup being defined in the solrconfig.xml file (see line ~1060 in
# the included sample configuration files).
#
# The default for this is false, i.e.
#
#   solr.highlight=false
#                                ~ ~ ~ * ~ ~ ~

solr.highlight=false

#                          Panl Facet Configuration
#                          ---- ----- -------------
# The panl facets that are in use by this collection.  The format is:
#     panl.facet.<code>=<solr_field>
#     panl.name.<code>=<field_name>
#
# where:
#       <code> is the LPSE code and __MUST__ be the same length as the
#              panl.lpse.length
# <solr_field> is the solr field name which __MUST__ map to the Solr field
#              name in the solr schema.xml configuration file
# <field_name> is the name of the facet in a more human friendly version, will
#              be returned with the results, and may be used as the facet
#              header
#
# An additional property can be set
#     panl.uniquekey.<code>=<Boolean>
#
# Which configures the field to be the Solr unique key for the Solr indexed
# collection (as defined by the <uniqueKey /> XML element in the Solr managed
# schema file.
#
# This is used with the More Like This handler and there can be __ONE__ and
# __ONLY_ONE__ defined per file.  Additionally, this property __MUST__ be set
# if the More Like This handler is to be used.
#                                ~ ~ ~ * ~ ~ ~
#
# IMPORTANT: There are a plethora of properties that may be set, depending on
#            the defined Solr field type and the behaviour of the field that
#            You would like the Panl server to exhibit.  There are different
#            types of facets, some of which have specific configuration
#            properties that can be set.
#
#             - Regular facet
#             - BOOLEAN facet
#             - OR facet
#             - RANGE facet
#             - DATE facet
#
#            Where possible, all properties that are available for a specific
#            field will be included, but commented out.  This does increase the
#            number of lines in the file, however it makes a good reference
#            point.
#
#            For additional information on any of the above facets and
#            properties, please see the documentation.
#
#                                ~ ~ ~ * ~ ~ ~
#
# Additionally (and optionally), you may define a prefix and/or a suffix for
# any defined facet.  This will make the URL longer, but will also make it more
# human understandable. Panl will automatically remove these before sending the
# query to the Solr server
#
# The format is:
#     panl.prefix.<code>=<prefix>
#     panl.suffix.<code>=<suffix>
#
# where:
#       <code> is the LPSE code and __MUST__ be the same length as the
#              panl.lpse.length
#     <prefix> is the text that will be prefixed before the selected facet in
#              the URI
#     <suffix> is the text that will be suffixed after the selected facet in
#              the URI
#
# As an example, should you have a manufacturer facet (LPSE code 'm') value of
# 'ACME Incorporated' with the following properties set:
#
#     panl.prefix.m=Manufactured by
#     panl.suffix.m=\ // a fine company
#
# The non-suffixed, non-prefixed URI encoding would be:
#     /ACME Incorporated/m/
#
# Post processing (i.e. URL decoding), the URI would be the following:
#     /Manufactured by ACME Incorporated // a fine company/m/
#
#                                ~ ~ ~ * ~ ~ ~
#
# Should you wish to return an additional fixed JSON object to both the active
# and available facets, then you may define a property for an facet with the
# format:
#
#     panl.extra.<code>=<valid_json_object>
#
# where:
#                  <code> is the LPSE code and __MUST__ be the same length as
#                         the panl.lpse.length
#     <valid_json_object> is any arbitrary (and valid) JSON object in string
#                         format, e.g.:
#                           { "valid": "JSON", "object": true }
#
# This 'extra' JSON object will be added to the defined facet in the available
# and active facets objects under the JSON key 'extra'.
#
#                                ~ ~ ~ * ~ ~ ~
#
# For RANGE facets the following properties are available, these options work
# best with Integer or Floating point types for Solr Fields.  It is available
# for String Solr dataTypes, although if there is is anything more than just a
# single character then the front-end implementation becomes more difficult.
#
#     panl.range.facet.<lpse_code>=<true_or_false>
#     panl.range.min.<lpse_code>=<minimum_value>
#     panl.range.max.<lpse_code>=<maximum_value>
#     panl.range.prefix.<lpse_code>=<range_prefix>
#     panl.range.infix.<lpse_code>=<range_infix>
#     panl.range.suffix.<lpse_code>=<range_suffix>
#     panl.range.min.value.<lpse_code>=<min_value_replacement>
#     panl.range.max.value.<lpse_code>=<max_value_replacement>
#     panl.range.min.wildcard.<lpse_code>=<true_or_false>
#     panl.range.max.wildcard.<lpse_code>=<true_or_false>
#     panl.range.suppress.<lpse_code>=<true_or_false>
#
# Notes:
#     panl.range.facet.<lpse_code>
#         This __MUST__ be set to true for this facet to be a RANGE facet
#     panl.range.min.<lpse_code>
#         This __MUST__ be set and be the minimum value for the dataset
#     panl.range.max.<lpse_code>
#         This __MUST__ be set and be the maximum value for the dataset
#     panl.range.prefix.<lpse_code>
#         This is the prefix that is applied to the range
#     panl.range.infix.<lpse_code>
#         This is the infix that sits between the values, if not set it will
#         default to the tilde character '~'
#     panl.range.suffix.<lpse_code>
#         This is the suffix that is applied to the range
#     panl.range.min.value.<lpse_code>
#         (Optional) This is the text that is replaced if the range value
#         selected is equal to the panl.range.min.<lpse_code> property value
#     panl.range.max.value.<lpse_code>=<max_value_replacement>
#         (Optional) This is the text that is replaced if the range value
#         selected is equal to the panl.range.max.<lpse_code> property value
#     panl.range.min.wildcard.<lpse_code>
#         (Optional) If the minimum value acts as a wildcard (and therefore
#         will also include values which are less than this value)
#     panl.range.max.wildcard.<lpse_code>
#         (Optional) If the maximum value acts as a wildcard (and therefore
#         will also include values which are greater than this value)
#     panl.range.suppress.<lpse_code>
#         (Optional) By default, panl will return a range JSON object and the
#         individual values for a facet. Setting this to true will only return
#         the range JSON object.
#
#                                ~ ~ ~ * ~ ~ ~
#
# NOTE: If this file was generated by the Panl generator, then a comment is
#       included before each of the lpse fields with the XML definition from
#       the Solr schema file.
#
# NOTE: ONLY fields that are INDEXED and STORED are included in the lpse fields
#       as they are the only ones that will have faceting enabled on them.
#
# NOTE: You do not need to define to facet on all the fields - any definitions
#       of fields that you do not wish to facet on may be simply deleted (it
#       is recommended to comment out the fields so that they may be easily
#       added back into the file if required).
#
#                                ~ ~ ~ * ~ ~ ~
#
# You may return additional fields with a query that are either faceted or not
# and are defined in the
#
#     panl.results.fields.*
#
# properties towards the bottom of this file
#
#                                ~ ~ ~ * ~ ~ ~


# <field "stored"="true" "name"="id" "type"="string" "multiValued"="false" "required"="true" />
# This configuration can __ONLY__ ever be a field as it is not indexed in Solr
panl.field.i=id
panl.name.i=Id
panl.type.i=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="brand" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.b=brand
panl.name.b=Brand
panl.type.b=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.b=true
#panl.or.always.b=true
# The following two properties are optional and may be set to any value
#panl.prefix.b=prefix
#panl.suffix.b=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.b=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.b=

# <field "indexed"="true" "stored"="true" "name"="name" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.N=name
panl.name.N=Name
panl.type.N=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.N=true
#panl.or.always.N=true
# The following two properties are optional and may be set to any value
#panl.prefix.N=prefix
#panl.suffix.N=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.N=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.N=

# <field "indexed"="true" "stored"="true" "name"="mechanism_type" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.m=mechanism_type
panl.name.m=Mechanism Type
panl.type.m=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.m=true
#panl.or.always.m=true
# The following two properties are optional and may be set to any value
#panl.prefix.m=prefix
#panl.suffix.m=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.m=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.m=

# <field "indexed"="true" "stored"="true" "name"="body_shape" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.B=body_shape
panl.name.B=Body Shape
panl.type.B=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.B=true
#panl.or.always.B=true
# The following two properties are optional and may be set to any value
#panl.prefix.B=prefix
#panl.suffix.B=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.B=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.B=

# <field "indexed"="true" "stored"="true" "name"="grip_type" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.g=grip_type
panl.name.g=Grip Type
panl.type.g=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.g=true
#panl.or.always.g=true
# The following two properties are optional and may be set to any value
#panl.prefix.g=prefix
#panl.suffix.g=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.g=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.g=

# <field "indexed"="true" "stored"="true" "name"="grip_shape" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.G=grip_shape
panl.name.G=Grip Shape
panl.type.G=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.G=true
#panl.or.always.G=true
# The following two properties are optional and may be set to any value
#panl.prefix.G=prefix
#panl.suffix.G=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.G=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.G=

# <field "indexed"="true" "stored"="true" "name"="cap_shape" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.c=cap_shape
panl.name.c=Cap Shape
panl.type.c=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.c=true
#panl.or.always.c=true
# The following two properties are optional and may be set to any value
#panl.prefix.c=prefix
#panl.suffix.c=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.c=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.c=

# <field "indexed"="true" "stored"="true" "name"="category" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.C=category
panl.name.C=Category
panl.type.C=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.C=true
#panl.or.always.C=true
# The following two properties are optional and may be set to any value
#panl.prefix.C=prefix
#panl.suffix.C=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.C=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.C=

# <field "indexed"="true" "stored"="true" "name"="length" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.l=length
panl.name.l=Length
panl.type.l=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.l=true
#panl.or.always.l=true
# The following two properties are optional and may be set to any value
#panl.prefix.l=prefix
#panl.suffix.l=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.l=true
#panl.range.min.l=0
#panl.range.max.l=100
#panl.range.prefix.l=range_prefix
#panl.range.infix.l=range_infix
#panl.range.suffix.l=range_suffix
#panl.range.min.value.l=min_value
#panl.range.max.value.l=max_value
#panl.range.min.wildcard.l=true
#panl.range.max.wildcard.l=true
#panl.range.suppress.l=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.l=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.l=

# <field "indexed"="true" "stored"="true" "name"="relative_length" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.r=relative_length
panl.name.r=Relative Length
panl.type.r=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.r=true
#panl.or.always.r=true
# The following two properties are optional and may be set to any value
#panl.prefix.r=prefix
#panl.suffix.r=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.r=true
#panl.range.min.r=0
#panl.range.max.r=100
#panl.range.prefix.r=range_prefix
#panl.range.infix.r=range_infix
#panl.range.suffix.r=range_suffix
#panl.range.min.value.r=min_value
#panl.range.max.value.r=max_value
#panl.range.min.wildcard.r=true
#panl.range.max.wildcard.r=true
#panl.range.suppress.r=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.r=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.r=

# <field "indexed"="true" "stored"="true" "name"="diameter" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.d=diameter
panl.name.d=Diameter
panl.type.d=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.d=true
#panl.or.always.d=true
# The following two properties are optional and may be set to any value
#panl.prefix.d=prefix
#panl.suffix.d=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.d=true
#panl.range.min.d=0
#panl.range.max.d=100
#panl.range.prefix.d=range_prefix
#panl.range.infix.d=range_infix
#panl.range.suffix.d=range_suffix
#panl.range.min.value.d=min_value
#panl.range.max.value.d=max_value
#panl.range.min.wildcard.d=true
#panl.range.max.wildcard.d=true
#panl.range.suppress.d=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.d=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.d=

# <field "indexed"="true" "stored"="true" "name"="weight" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.w=weight
panl.name.w=Weight
panl.type.w=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.w=true
#panl.or.always.w=true
# The following two properties are optional and may be set to any value
#panl.prefix.w=prefix
#panl.suffix.w=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.w=true
#panl.range.min.w=0
#panl.range.max.w=100
#panl.range.prefix.w=range_prefix
#panl.range.infix.w=range_infix
#panl.range.suffix.w=range_suffix
#panl.range.min.value.w=min_value
#panl.range.max.value.w=max_value
#panl.range.min.wildcard.w=true
#panl.range.max.wildcard.w=true
#panl.range.suppress.w=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.w=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.w=

# <field "indexed"="true" "stored"="true" "name"="relative_weight" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.R=relative_weight
panl.name.R=Relative Weight
panl.type.R=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.R=true
#panl.or.always.R=true
# The following two properties are optional and may be set to any value
#panl.prefix.R=prefix
#panl.suffix.R=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.R=true
#panl.range.min.R=0
#panl.range.max.R=100
#panl.range.prefix.R=range_prefix
#panl.range.infix.R=range_infix
#panl.range.suffix.R=range_suffix
#panl.range.min.value.R=min_value
#panl.range.max.value.R=max_value
#panl.range.min.wildcard.R=true
#panl.range.max.wildcard.R=true
#panl.range.suppress.R=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.R=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.R=

# <field "indexed"="true" "stored"="true" "name"="lead_length" "type"="pint" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.L=lead_length
panl.name.L=Lead Length
panl.type.L=solr.IntPointField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.L=true
#panl.or.always.L=true
# The following two properties are optional and may be set to any value
#panl.prefix.L=prefix
#panl.suffix.L=suffix
# This field can be configured as a range facet by setting the following
# properties
#panl.range.facet.L=true
#panl.range.min.L=0
#panl.range.max.L=100
#panl.range.prefix.L=range_prefix
#panl.range.infix.L=range_infix
#panl.range.suffix.L=range_suffix
#panl.range.min.value.L=min_value
#panl.range.max.value.L=max_value
#panl.range.min.wildcard.L=true
#panl.range.max.wildcard.L=true
#panl.range.suppress.L=false
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.L=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.L=

# <field "indexed"="true" "stored"="true" "name"="disassemble" "type"="boolean" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.D=disassemble
panl.name.D=Disassemble
panl.type.D=solr.BoolField
# The following two properties are optional and may be set to any value
#panl.prefix.D=prefix
#panl.suffix.D=suffix
# Because this is a Boolean field, you can use a boolean value replacement for
# either the true value, the false value, or neither.  This makes a more human-
# readable URL
#panl.bool.D.true=is-disassemble
#panl.bool.D.false=is-not-disassemble
# You may also want to be able to display this as a checkbox which will pass
# through either a 'true' or 'false' value when selected
#panl.bool.checkbox.D=true_or_false
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.D=

# <field "indexed"="true" "stored"="true" "name"="hardness_indicator" "type"="string" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.h=hardness_indicator
panl.name.h=Hardness Indicator
panl.type.h=solr.StrField
# This field is a candidate for an OR facet, you may wish to configure the
# following properties
#panl.or.facet.h=true
#panl.or.always.h=true
# The following two properties are optional and may be set to any value
#panl.prefix.h=prefix
#panl.suffix.h=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.h=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.h=

# <field "indexed"="true" "stored"="false" "name"="in_built_eraser" "type"="boolean" "multiValued"="false" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.I=in_built_eraser
panl.name.I=In Built Eraser
panl.type.I=solr.BoolField
# The following two properties are optional and may be set to any value
#panl.prefix.I=prefix
#panl.suffix.I=suffix
# Because this is a Boolean field, you can use a boolean value replacement for
# either the true value, the false value, or neither.  This makes a more human-
# readable URL
#panl.bool.I.true=is-in_built_eraser
#panl.bool.I.false=is-not-in_built_eraser
# You may also want to be able to display this as a checkbox which will pass
# through either a 'true' or 'false' value when selected
#panl.bool.checkbox.I=true_or_false
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.I=

# <field "stored"="true" "name"="variants" "type"="string" "multiValued"="true" />
# This configuration can __ONLY__ ever be a field as it is not indexed in Solr
panl.field.v=variants
panl.name.v=Variants
panl.type.v=solr.StrField

# <field "indexed"="true" "stored"="true" "name"="text" "type"="text_general" "multiValued"="true" />
# This configuration can be either a field or a facet as it is indexed in Solr
panl.facet.t=text
panl.name.t=Text
panl.type.t=solr.TextField
# This Solr field is configured as multiValued, and is added as a property for the
# so that single page search can be generated properly.  You __SHOULD_NOT___
# change this unless the underlying Solr schema changes
panl.multivalue.t=true
# If you want to have a multi-value separator enabled, uncomment the following
# property and set it to any string.
#panl.multivalue.separator.t=,
# The following two properties are optional and may be set to any value
#panl.prefix.t=prefix
#panl.suffix.t=suffix
# By default Solr will always return facet ordered by count descending (i.e.
# The largest counts first) - uncomment the below line to return it in value
# order (e.g. alphabetical/numerical)
#panl.facetsort.t=index
# If you want this facet to only appear if another facet has already been
# passed through then add the LPSE code(s) in a comma separated list below
#panl.when.t=


#                        Panl LPSE Order Configuration
#                        ---- ---- ----- -------------
# This is the order in which the URL will be generated, the default order
# generated by panl generate is the order in which the fields were defined in
# the solr managed-schema.xml file and will almost certainly not be the order
# in which you would want to generate the URLs.
#
# NOTE: all defined panl facet fields must be represented here, and the
# recommendation is to have the properties in the following order:
#
#     panl.param.passthrough
#
#   ... all the other LPSE codes ...
#
#     panl.param.query
#     panl.param.page
#     panl.param.numrows
#     panl.param.sort
#     panl.param.query.operand
#
# Of course, you are welcome to change this.
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.order=z,\
i,\
b,\
N,\
m,\
B,\
g,\
G,\
c,\
C,\
l,\
r,\
d,\
w,\
R,\
L,\
D,\
h,\
I,\
v,\
t,\
q,\
p,\
n,\
s,\
o

#                        Panl Facet Order Configuration
#                        ---- ----- ----- -------------
# This is the order in which the facets will be returned in the Panl JSON
# response.  This differs from the above property, which controls the order of
# facets values in the URL.
#
# NOTE: The panl.param.* LPSE codes are not included in the following list, if
#       any of the defined facets are not included in the list, then they will
#       automatically be appended to the order.
#
# This will be returned in the Panl JSON response object with the key:
#
#     panl.facetorder
#
# As a JSON Array of objects in the form:
#     [
#       {
#         "type": "<type>",
#         "panl_code": "<panl_code>",
#         "facet_name": "<facet_name>"
#       },
#
#       ...
#
#     ]
#
# where:
#       <type> is the type of the facet and maps to the available JSON key,
#              which will be one of:
#                - facets
#                - range_facets
#                - data_range_facets
#  <panl_code> is the bound LPSE code which can be used as a lookup
#              name in the solr schema.xml configuration file
# <facet_name> is the solr field name which can be used as a lookup
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.facetorder=i,\
b,\
N,\
m,\
B,\
g,\
G,\
c,\
C,\
l,\
r,\
d,\
w,\
R,\
L,\
D,\
h,\
I,\
v,\
t


#                       Panl LPSE Ignore Configuration
#                       ---- ---- ------ -------------
# Any LPSE code listed below will be ignored and not returned in either the
# active or available filters JSON object
#
# This is useful when you want to use a facet for a lookup, but not allow the
# facet to be removed or returned in the list of available or active facets. An
# example usage would be when generating a link to a single results (say with
# its id field) and the returned available facets would return all of the ids
# as facets.
#
#                                ~ ~ ~ * ~ ~ ~

panl.lpse.ignore=

#                      Panl Results Field Configuration
#                      ---- ------- ----- -------------
# Below are the fields that are configured to be returned for the query, these
# fields are added to the query and must match the solr fields.
#
# By default, the panl.results.fields.default always exists - even if it is not
# included in these properties file - it is included here for reference for all
# the fields that are stored by the solr engine.  If the default fieldset is
# not explicitly defined, then it will request that __ALL__ fields be sent back
# from the Solr server.  If you edit the default fieldset, then only those
# fields referenced will be sent back.
#
# Additionally, there is a hidden fieldset panl.results.fields.empty which will
# __ALWAYS__ exist and __ALWAYS__ return no fields in the document.  (This is
# done by requesting no documents be returned with the results, irrespective of
# the passed in parameters and default rows parameter.)  If you define a
# fieldset as empty, then it will log an error on startup and be silently
# ignored
#
# To define a fieldset, as an example, another property:
#
#     panl.results.fields.firstfive
#
# was also automatically generated with only the first five fields.  You may
# rename, delete or add any of the results fields properties as you wish.
#
#                                ~ ~ ~ * ~ ~ ~

panl.results.fields.default=id,\
brand,\
name,\
mechanism_type,\
body_shape,\
grip_type,\
grip_shape,\
cap_shape,\
category,\
length,\
relative_length,\
diameter,\
weight,\
relative_weight,\
lead_length,\
disassemble,\
hardness_indicator,\
in_built_eraser,\
variants,\
text

panl.results.fields.firstfive=id,\
brand,\
name,\
mechanism_type,\
body_shape

#                        Panl Sort Field Configuration
#                        ---- ---- ----- -------------
# Below are the fields that are configured to be able to be sorted on, these
# fields must either be defined as a panl.facet or a panl.field and __MUST__ be
# the Solr field name.
#
#                                ~ ~ ~ * ~ ~ ~

panl.sort.fields=

#                       Panl Search Field Configuration
#                       ---- ------ ----- -------------
# Below are the fields that are configured to be able to be searched on, these
# fields must be defined as a panl.search (which means that they cannot be
# faceted upon) and __MUST__ be the Solr field name.
#
# If left blank, then this will default to the *:* query selector
#
#                                ~ ~ ~ * ~ ~ ~

panl.search.fields=
